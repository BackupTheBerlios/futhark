-- @author: francesco bracchi <frbracch@gmail.com>

newResult = userevent.newResult;

changeResult = userevent.changeResult;

situation r = r untilI changeResult and changeResult.name == r.name and (lift situation) (pres changeResult);

makeDiv as = {
  namespace: xmlns,
  nodetype: "div",
  attributes: [],
  childs: as
};

totl n = n untilI newResult and (lift tt) (pres newResult) (futr n)
    where
      tt x y = 
          let x1 = situation x in totl (x1.votes + y);
    end;

total = totl 0;

showBar name perc votes = 
    `<div class = "percent">
    @(progressbar perc)
    <div style = "display:inline">@name: @perc % (@votes@" "votes)</div>
    </div>;
           
st p t s ss = sits p t ss1
    where
      s1 = situation s;
      v1 = s1.votes * p;
      p1 = round (v1 / t * 100);
      s2 = showBar s1.name p1 (round v1);
      ss1 = concat ss [s2];
    end;

sits p t ss = ss untilI newResult and (lift st) (futr p) (futr t) (pres newResult) (futr ss);
                            
situations p = sits p total [];
          
result p = `<div style = {opacity: p}>
       @(makeDiv (situations p))
        <br/>
       <div class = "total">(total: @(round (p * total)))</div>
       </div>;
